version: 2.1

jobs:
  build:
    docker: # use the Docker executor
      - image: python:3.8
        auth:
          username: rfrazier716
          password: $DOCKER_API_KEY
    steps:
      - checkout
      - restore_cache:
            key: python-cache-{{ checksum "poetry.lock" }}-{{ checksum "pyproject.toml" }}
      - run:
          name: install python dependencies
          command: |
            [[ -d /root/.cache/pip ]] || curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python -
            [[ -d /root/.cache/pip ]] || /root/.poetry/bin/poetry install

      - save_cache:
          key: python-cache-{{ checksum "poetry.lock" }}-{{ checksum "pyproject.toml" }}
          paths:
            - "/root/.cache/pip/"
            - "/root/.poetry/"
            - "~/.cache/pypoetry"

  unit-tests:
    parameters:
      version:
        type: string
        default: "3.8"

    docker: # use the Docker executor
      - image: python:<< parameters.version >>
        auth:
          username: rfrazier716
          password: $DOCKER_API_KEY

    steps:
      - checkout
      - restore_cache:
          key: python-cache-{{ checksum "poetry.lock" }}-{{ checksum "pyproject.toml" }}
      - run:
          name: install dependencies
          command: |
            /root/.poetry/bin/poetry install
      - run:
          name: run unittests
          command: /root/.poetry/bin/poetry run tox -e py<< parameters.version >>

  coverage:
    docker: # use the Docker executor
      - image: python:3.8
        auth:
          username: rfrazier716
          password: $DOCKER_API_KEY

    steps:
      - checkout
      - restore_cache:
          key: python-cache-{{ checksum "poetry.lock" }}-{{ checksum "pyproject.toml" }}
      - run:
          name: coverage
          command: |
            /root/.poetry/bin/poetry install
            /root/.poetry/bin/poetry run tox -e coverage

      - store_artifacts:
          path: .tox/htmlcov


  deploy:
    docker: # use the Docker executor
      - image: python:3.8
        auth:
          username: rfrazier
          password: $DOCKER_API_KEY

    environment:
      PYPI_USERNAME: $PYPI_USERNAME
      PYPI_PASSWORD: $PYPI_PASSWORD

    steps:
      - checkout
      - restore_cache:
          key: python-cache-{{ checksum "poetry.lock" }}-{{ checksum "pyproject.toml" }}
      - run:
          name: deploy to pypi
          command: |
            /root/.poetry/bin/poetry build
            /root/.poetry/bin/poetry publish --username $PYPI_USERNAME --password $PYPI_PASSWORD

workflows:
  build_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /.*/

      - unit-tests:
          name: py37-tests
          version: "3.7"
          requires:
            - build

      - unit-tests:
          name: py38-tests
          version: "3.8"
          requires:
            - build

      - coverage:
          requires:
            - build

      - deploy:
          requires:
            - build
            - py37-tests
            - py38-tests
          filters:
            tags:
              only: /^v[0-9]+(\.[0-9]+)*(-[a-z]+(\.[0-9]+)*)?/
            branches:
              ignore: /.*/
